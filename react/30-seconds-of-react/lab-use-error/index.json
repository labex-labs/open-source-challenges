{
  "type": "lab",
  "difficulty": "Beginner",
  "time": 10,
  "hidden": false,
  "fee_type": "free",
  "show_in_tutorial": true,
  "backend": {
    "imageid": "webide-ubuntu:2204"
  },
  "contributors": ["Lotus-7"],
  "license": {
    "name": "CC-BY-4.0",
    "url": "https://github.com/30-seconds/30-seconds-of-code/blob/master/LICENSE",
    "repo": "https://github.com/30-seconds/30-seconds-of-code"
  },
  "i18n": [
    {
      "lang": "en",
      "title": "React useError Hook",
      "description": "In this lab, we will learn how to create an error dispatcher using the useError hook in React. The hook allows us to create a state variable that holds an error and throw it whenever it's truthy. We will also use the useCallback hook to update the state and return the cached function. By the end of this lab, you will be able to effectively handle errors in your React applications.",
      "meta": {
        "title": "Mastering React's useError Hook",
        "description": "Learn how to create an error dispatcher using the React useError hook and effectively handle errors in your applications.",
        "keywords": "error handling, react, web development, hooks, useerror"
      },
      "details": {
        "steps": [
          {
            "title": "React useError Hook",
            "text": "en/step1.md",
            "verify": [
              {
                "name": "Verify the running status of the web service",
                "file": "verify1-1.sh",
                "hint": "Please click on 'Go Live' in the bottom right corner to run the web service on port 8080. Then, you can refresh the **Web 8080** Tab to preview the web page.",
                "timeout": 0,
                "showstderr": true
              },
              {
                "name": "Verify the status of script.js modification",
                "file": "verify1-2.sh",
                "hint": "Please follow the steps to complete the lab.",
                "timeout": 0,
                "showstderr": true
              }
            ],
            "skills": [
              "react/event_handling",
              "react/hooks",
              "react/jsx",
              "react/use_state_reducer"
            ]
          }
        ],
        "intro": {
          "text": "en/intro.md",
          "background": "setup.sh",
          "title": "Introduction"
        },
        "finish": {
          "text": "en/finish.md",
          "title": "Summary"
        }
      }
    },
    {
      "lang": "zh",
      "title": "React useError 钩子",
      "description": "在本实验中，我们将学习如何使用 React 中的 useError 钩子创建一个错误调度器。该钩子允许我们创建一个状态变量来保存错误，并在其为真值时抛出它。我们还将使用 useCallback 钩子来更新状态并返回缓存的函数。在本实验结束时，你将能够在 React 应用程序中有效地处理错误。",
      "meta": {
        "title": "掌握 React 的 useError 钩子",
        "description": "学习如何使用 React useError 钩子创建一个错误调度器，并在应用程序中有效地处理错误。",
        "keywords": "错误处理, React, 网页开发, 钩子, useerror"
      },
      "details": {
        "steps": [
          {
            "title": "React useError 钩子",
            "text": "zh/step1.md",
            "verify": [
              {
                "name": "验证 Web 服务的运行状态",
                "file": "verify1-1.sh",
                "hint": "请点击右下角的“Go Live”以在端口 8080 上运行 Web 服务。然后，你可以刷新“Web 8080”标签页来预览网页。",
                "timeout": 0,
                "showstderr": true
              },
              {
                "name": "验证 script.js 修改状态",
                "file": "verify1-2.sh",
                "hint": "请按照步骤完成实验。",
                "timeout": 0,
                "showstderr": true
              }
            ],
            "skills": [
              "react/event_handling",
              "react/hooks",
              "react/jsx",
              "react/use_state_reducer"
            ]
          }
        ],
        "intro": {
          "text": "zh/intro.md",
          "background": "setup.sh",
          "title": "介绍"
        },
        "finish": {
          "text": "zh/finish.md",
          "title": "总结"
        }
      }
    }
  ],
  "details": {
    "assets": {
      "host01": [
        {
          "file": "index.html",
          "target": "~/project",
          "chmod": "ugo+rwx"
        },
        {
          "file": "script.js",
          "target": "~/project",
          "chmod": "ugo+rwx"
        }
      ]
    }
  }
}
