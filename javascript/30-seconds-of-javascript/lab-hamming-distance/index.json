{
  "type": "lab",
  "title": "Hamming Distance Calculation in JavaScript",
  "description": "In this lab, we will explore the concept of Hamming Distance and how it is calculated in JavaScript. Through hands-on exercises and coding challenges, you will learn how to use the XOR operator and string manipulation methods to determine the bit difference between two numbers. By the end of this lab, you will have a solid understanding of the Hamming Distance algorithm and be able to implement it in your own JavaScript programs.",
  "meta": {
    "title": "Hamming Distance | JavaScript Coding Lab",
    "description": "Explore the concept of Hamming Distance and learn how to calculate it in JavaScript. Hands-on exercises and coding challenges to enhance your programming skills.",
    "keywords": "Hamming Distance, JavaScript, Coding Lab, Bit Difference, XOR Operator, String Manipulation"
  },
  "difficulty": "Beginner",
  "time": 10,
  "hidden": false,
  "fee_type": "free",
  "show_in_tutorial": true,
  "details": {
    "steps": [
      {
        "title": "Hamming Distance",
        "text": "step1.md",
        "verify": [
          {
            "name": "Verify Node Commands in ZSH History",
            "file": "verify1.sh",
            "hint": "JavaScript can be run in the Terminal/SSH by typing 'node' and pressing Enter.",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": [
          "javascript/arith_ops",
          "javascript/comp_ops",
          "javascript/data_types",
          "javascript/variables"
        ]
      }
    ],
    "intro": {
      "text": "intro.md",
      "background": "setup.sh"
    },
    "finish": {
      "text": "finish.md"
    }
  },
  "backend": {
    "imageid": "webide-ubuntu:2204"
  },
  "contributors": ["Lotus-7"],
  "license": {
    "name": "CC-BY-4.0",
    "url": "https://github.com/30-seconds/30-seconds-of-code/blob/master/LICENSE",
    "repo": "https://github.com/30-seconds/30-seconds-of-code"
  }
}
