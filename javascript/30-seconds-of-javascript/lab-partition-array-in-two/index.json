{
  "type": "lab",
  "title": "Partition Array in Two",
  "description": "In this lab, we will explore how to partition an array into two separate arrays based on a provided function's truthiness for each element using JavaScript. We will use the Array.prototype.reduce() method to create two arrays and the Array.prototype.push() method to add elements to the appropriate array based on the provided function's truthiness. By the end of this lab, you will have a strong understanding of how to partition an array in JavaScript and be able to apply this knowledge in your future projects.",
  "meta": {
    "title": "Partition Array in Two",
    "description": "Explore the art of partitioning arrays in JavaScript using the reduce() method and push() function.",
    "keywords": "javascript, javascript practice, push, javascript practice online, programming tutorial, javascript lab, reduce, javascript tutor, array partitioning"
  },
  "difficulty": "Beginner",
  "time": 10,
  "hidden": false,
  "fee_type": "free",
  "show_in_tutorial": true,
  "details": {
    "steps": [
      {
        "title": "Partition Array in Two",
        "text": "step1.md",
        "verify": [
          {
            "name": "Verify Node Usage In Zsh History",
            "file": "verify1.sh",
            "hint": "JavaScript can be run in the Terminal/SSH by typing 'node' and pressing Enter.",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": [
          "javascript/arith_ops",
          "javascript/comp_ops",
          "javascript/data_types",
          "javascript/destr_assign",
          "javascript/higher_funcs",
          "javascript/variables"
        ]
      }
    ],
    "intro": {
      "text": "intro.md",
      "background": "setup.sh"
    },
    "finish": {
      "text": "finish.md"
    }
  },
  "backend": {
    "imageid": "webide-ubuntu:2204"
  },
  "contributors": ["Lotus-7"],
  "license": {
    "name": "CC-BY-4.0",
    "url": "https://github.com/30-seconds/30-seconds-of-code/blob/master/LICENSE",
    "repo": "https://github.com/30-seconds/30-seconds-of-code"
  }
}
