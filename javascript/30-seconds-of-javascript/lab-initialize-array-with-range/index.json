{
  "type": "lab",
  "title": "Initialize Array with Range",
  "description": "In this lab, we will explore the implementation of a function called initializeArrayWithRange in JavaScript. This function initializes an array containing the numbers in a specified range, with the option to include a step value. We will learn how to use Array.from(), the map() function, and default parameter values to create a flexible and reusable function for generating arrays with a range of values.",
  "meta": {
    "title": "Initializing Arrays with Ranges in JavaScript",
    "description": "Learn how to create flexible and reusable functions for generating arrays with a range of values in JavaScript.",
    "keywords": "javascript, javascript practice, initialization, javascript practice online, javascript lab, range, javascript tutor, array, programming"
  },
  "difficulty": "Beginner",
  "time": 10,
  "hidden": false,
  "fee_type": "free",
  "show_in_tutorial": true,
  "details": {
    "steps": [
      {
        "title": "Initialize Array with Range",
        "text": "step1.md",
        "verify": [
          {
            "name": "Verify Node Command Usage",
            "file": "verify1.sh",
            "hint": "JavaScript can be run in the Terminal/SSH by typing 'node' and pressing Enter.",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": [
          "javascript/arith_ops",
          "javascript/comp_ops",
          "javascript/data_types",
          "javascript/variables"
        ]
      }
    ],
    "intro": {
      "text": "intro.md",
      "background": "setup.sh"
    },
    "finish": {
      "text": "finish.md"
    },
    "assets": {
      "host01": [
        {
          "file": "",
          "target": "/tmp"
        }
      ]
    }
  },
  "backend": {
    "imageid": "webide-ubuntu:2204"
  },
  "contributors": ["Lotus-7"],
  "license": {
    "name": "CC-BY-4.0",
    "url": "https://github.com/30-seconds/30-seconds-of-code/blob/master/LICENSE",
    "repo": "https://github.com/30-seconds/30-seconds-of-code"
  }
}
