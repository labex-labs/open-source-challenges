{
  "type": "lab",
  "title": "Calculating Weighted Averages in JavaScript",
  "description": "In this lab, we will explore how to calculate the weighted average of two or more numbers using JavaScript. We will be using the Array.prototype.reduce() method to create the weighted sum of the values and the sum of the weights, and then divide them with each other to get the weighted average. This lab will help you understand the concept of a weighted average and how to implement it in JavaScript.",
  "meta": {
    "title": "Calculating Weighted Average in JavaScript | Programming Tutorial",
    "description": "Learn how to calculate the weighted average of two or more numbers using JavaScript and the Array.prototype.reduce() method. Improve your coding skills with this comprehensive tutorial.",
    "keywords": "weighted average, JavaScript, programming, tutorial, Array.prototype.reduce"
  },
  "difficulty": "Beginner",
  "time": 10,
  "hidden": false,
  "fee_type": "free",
  "show_in_tutorial": true,
  "details": {
    "steps": [
      {
        "title": "Weighted Average",
        "text": "step1.md",
        "verify": [
          {
            "name": "Verify Node Commands History",
            "file": "verify1.sh",
            "hint": "JavaScript can be run in the Terminal/SSH by typing 'node' and pressing Enter.",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": [
          "javascript/arith_ops",
          "javascript/array_methods",
          "javascript/comp_ops",
          "javascript/data_types",
          "javascript/higher_funcs",
          "javascript/variables"
        ]
      }
    ],
    "intro": {
      "text": "intro.md",
      "background": "setup.sh"
    },
    "finish": {
      "text": "finish.md"
    }
  },
  "backend": {
    "imageid": "webide-ubuntu:2204"
  },
  "contributors": ["Lotus-7"],
  "license": {
    "name": "CC-BY-4.0",
    "url": "https://github.com/30-seconds/30-seconds-of-code/blob/master/LICENSE",
    "repo": "https://github.com/30-seconds/30-seconds-of-code"
  }
}
