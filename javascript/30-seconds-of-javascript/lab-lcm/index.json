{
  "type": "lab",
  "title": "Calculate Least Common Multiple Using JavaScript",
  "description": "In this lab, we will explore how to calculate the least common multiple of two or more numbers using JavaScript. We will use the greatest common divisor (GCD) formula and the fact that lcm(x, y) = x * y / gcd(x, y) to determine the least common multiple. The GCD formula uses recursion, which we will implement in our code.",
  "meta": {
    "title": "Least Common Multiple Calculation | JavaScript Programming",
    "description": "Learn how to calculate the least common multiple of two or more numbers using JavaScript. Explore the GCD formula and implement the code to determine the LCM.",
    "keywords": "least common multiple, JavaScript, programming, GCD, recursion"
  },
  "difficulty": "Beginner",
  "time": 10,
  "hidden": false,
  "fee_type": "free",
  "show_in_tutorial": true,
  "details": {
    "steps": [
      {
        "title": "Least Common Multiple",
        "text": "step1.md",
        "verify": [
          {
            "name": "Verify Node Commands In Zsh History",
            "file": "verify1.sh",
            "hint": "JavaScript can be run in the Terminal/SSH by typing 'node' and pressing Enter.",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": [
          "javascript/arith_ops",
          "javascript/comp_ops",
          "javascript/data_types",
          "javascript/higher_funcs",
          "javascript/spread_rest",
          "javascript/variables"
        ]
      }
    ],
    "intro": {
      "text": "intro.md",
      "background": "setup.sh"
    },
    "finish": {
      "text": "finish.md"
    }
  },
  "backend": {
    "imageid": "webide-ubuntu:2204"
  },
  "contributors": ["Lotus-7"],
  "license": {
    "name": "CC-BY-4.0",
    "url": "https://github.com/30-seconds/30-seconds-of-code/blob/master/LICENSE",
    "repo": "https://github.com/30-seconds/30-seconds-of-code"
  }
}
