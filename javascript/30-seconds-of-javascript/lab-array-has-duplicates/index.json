{
  "type": "lab",
  "title": "Check if Array Has Duplicates",
  "description": "In this lab, we will explore how to check if an array has duplicates using JavaScript. We will use the Set object to obtain the unique values in the array, then compare the count of these unique values with the length of the original array. By the end of this lab, you will have a better understanding of how to efficiently check for duplicates in an array using JavaScript.",
  "meta": {
    "title": "Detect Duplicate Values in JavaScript Arrays | Programming Tutorial",
    "description": "Learn how to efficiently check for duplicates in JavaScript arrays using the Set object. Improve your coding skills with this comprehensive programming tutorial.",
    "keywords": "JavaScript, arrays, duplicates, Set, programming, tutorial"
  },
  "difficulty": "Beginner",
  "time": 10,
  "hidden": false,
  "fee_type": "free",
  "show_in_tutorial": true,
  "details": {
    "steps": [
      {
        "title": "Check if Array Has Duplicates",
        "text": "step1.md",
        "verify": [
          {
            "name": "Verify Node Commands Executed",
            "file": "verify1.sh",
            "hint": "JavaScript can be run in the Terminal/SSH by typing 'node' and pressing Enter.",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": [
          "javascript/arith_ops",
          "javascript/comp_ops",
          "javascript/data_types",
          "javascript/variables"
        ]
      }
    ],
    "intro": {
      "text": "intro.md",
      "background": "setup.sh"
    },
    "finish": {
      "text": "finish.md"
    }
  },
  "backend": {
    "imageid": "webide-ubuntu:2204"
  },
  "contributors": ["Lotus-7"],
  "license": {
    "name": "CC-BY-4.0",
    "url": "https://github.com/30-seconds/30-seconds-of-code/blob/master/LICENSE",
    "repo": "https://github.com/30-seconds/30-seconds-of-code"
  }
}
