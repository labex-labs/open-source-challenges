{
  "type": "lab",
  "title": "Bash Trap Command",
  "description": "In this lab, you'll learn to use the Bash trap command to handle signals and interruptions in your scripts. You'll create a script that catches specific signals, implement custom actions for these signals, and use functions with trap for more organized code. By the end, you'll be able to write scripts that gracefully handle various scenarios and prevent unpredictable behavior.",
  "meta": {
    "title": "Bash Scripting: Mastering the Trap Command for Signal Handling",
    "description": "Learn to use the Bash trap command to catch and handle signals, interruptions, and user inputs in your scripts. Create more robust and predictable Bash scripts with proper signal management.",
    "keywords": "bash scripting, trap command, signal handling, interrupt management, script robustness, bash programming, linux scripting"
  },
  "difficulty": "Beginner",
  "time": 35,
  "hidden": false,
  "fee_type": "free",
  "show_in_tutorial": true,
  "details": {
    "steps": [
      {
        "title": "Create a Bash Script",
        "text": "step1.md",
        "verify": [
          {
            "name": "Verify file creation",
            "file": "verify1-1.sh",
            "hint": "Make sure you have created the file 'trap_example.sh' in the ~/project directory. If you're having trouble, try running the 'touch' command again.",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": ["linux/cd", "linux/touch", "shell/shebang"]
      },
      {
        "title": "Implement a Basic Trap Command",
        "text": "step2.md",
        "verify": [
          {
            "name": "Verify script content",
            "file": "verify2-1.sh",
            "hint": "Ensure that you have added the trap command to the script as instructed. Check for typos and make sure you've saved the file.",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": [
          "linux/echo",
          "shell/comments",
          "shell/trap_statements",
          "shell/while_loops"
        ]
      },
      {
        "title": "Make the Script Executable and Run It",
        "text": "step3.md",
        "verify": [
          {
            "name": "Verify script permissions",
            "file": "verify3-1.sh",
            "hint": "Make sure you've made the script executable using the chmod command. If you're having trouble, try running the chmod command again.",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": ["linux/chmod"]
      },
      {
        "title": "Modify the Trap to Use a Function",
        "text": "step4.md",
        "verify": [
          {
            "name": "Verify function definition",
            "file": "verify4-1.sh",
            "hint": "Make sure you have defined the cleanup_and_exit function in the script. Check for typos in the function name.",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": ["shell/func_def", "shell/trap_statements", "linux/echo"]
      }
    ],
    "intro": {
      "text": "intro.md",
      "background": "setup.sh"
    },
    "finish": {
      "text": "finish.md"
    },
    "assets": {
      "host01": [
        {
          "file": "",
          "target": "~/project",
          "chmod": "ugo+rwx"
        }
      ]
    }
  },
  "backend": {
    "imageid": "webide-ubuntu:2204"
  },
  "contributors": [],
  "license": {
    "name": "Apache-2.0",
    "url": "https://github.com/ronreiter/interactive-tutorials#Apache-2.0-1-ov-file",
    "repo": "https://github.com/ronreiter/interactive-tutorials"
  },
  "verified": true
}
