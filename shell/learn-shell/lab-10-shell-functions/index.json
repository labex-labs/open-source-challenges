{
  "type": "lab",
  "title": "Shell Functions",
  "description": "In this lab, you will learn about functions in shell programming. You'll create and use functions with parameters, explore return values, understand variable scope, and implement an advanced function. By the end of this lab, you'll be able to write reusable code blocks to perform repeated tasks efficiently in shell scripts.",
  "meta": {
    "title": "Shell Scripting: Mastering Functions and Subroutines",
    "description": "Learn to create and use shell functions, handle parameters and return values, manage variable scope, and implement advanced function logic in shell programming.",
    "keywords": "shell functions, bash functions, shell scripting, function parameters, return values, variable scope, case statements, shell programming"
  },
  "difficulty": "Beginner",
  "time": 15,
  "hidden": false,
  "fee_type": "free",
  "show_in_tutorial": true,
  "details": {
    "steps": [
      {
        "title": "Creating Your First Shell Function",
        "text": "step1.md",
        "verify": [
          {
            "name": "Check if functions.sh exists",
            "file": "verify1-1.sh",
            "hint": "Make sure you've created the file functions.sh in the ~/project directory.",
            "timeout": 0,
            "showstderr": true
          },
          {
            "name": "Check if functions.sh is executable",
            "file": "verify1-2.sh",
            "hint": "Don't forget to make functions.sh executable using the chmod command.",
            "timeout": 0,
            "showstderr": true
          },
          {
            "name": "Check if functions.sh contains the greet function",
            "file": "verify1-3.sh",
            "hint": "Make sure you've defined the greet function in functions.sh as shown in the example.",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": [
          "shell/func_def",
          "linux/touch",
          "linux/chmod",
          "shell/comments"
        ]
      },
      {
        "title": "Functions with Parameters",
        "text": "step2.md",
        "verify": [
          {
            "name": "Check if functions.sh contains the greet function with a parameter",
            "file": "verify2-1.sh",
            "hint": "Make sure you've updated the greet function to accept a parameter as shown in the example.",
            "timeout": 0,
            "showstderr": true
          },
          {
            "name": "Check if functions.sh contains the calculate function",
            "file": "verify2-2.sh",
            "hint": "Ensure you've added the calculate function to functions.sh as demonstrated in the example.",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": [
          "shell/func_def",
          "shell/variables_usage",
          "shell/arith_expansion",
          "linux/echo"
        ]
      },
      {
        "title": "Return Values from Functions",
        "text": "step3.md",
        "verify": [
          {
            "name": "Check if functions.sh contains the get_square function",
            "file": "verify3-1.sh",
            "hint": "Make sure you've added the get_square function to functions.sh as shown in the example.",
            "timeout": 0,
            "showstderr": true
          },
          {
            "name": "Check if functions.sh contains the set_global_result function",
            "file": "verify3-2.sh",
            "hint": "Ensure you've added the set_global_result function to functions.sh as demonstrated in the example.",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": [
          "shell/func_def",
          "shell/variables_usage",
          "shell/arith_expansion",
          "shell/cmd_substitution",
          "linux/echo"
        ]
      },
      {
        "title": "Understanding Variable Scope",
        "text": "step4.md",
        "verify": [
          {
            "name": "Check if functions.sh contains the demonstrate_scope function",
            "file": "verify4-1.sh",
            "hint": "Make sure you've added the demonstrate_scope function to functions.sh as shown in the example.",
            "timeout": 0,
            "showstderr": true
          },
          {
            "name": "Check if functions.sh uses local variables",
            "file": "verify4-2.sh",
            "hint": "Ensure you've used the 'local' keyword to create a local variable in the demonstrate_scope function.",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": [
          "shell/func_def",
          "shell/variables_usage",
          "shell/variables_decl",
          "linux/echo"
        ]
      },
      {
        "title": "Advanced Function - ENGLISH_CALC",
        "text": "step5.md",
        "verify": [
          {
            "name": "Check if functions.sh contains the ENGLISH_CALC function",
            "file": "verify5-1.sh",
            "hint": "Make sure you've added the ENGLISH_CALC function to functions.sh as shown in the example.",
            "timeout": 0,
            "showstderr": true
          },
          {
            "name": "Check if ENGLISH_CALC uses a case statement",
            "file": "verify5-2.sh",
            "hint": "Ensure you've used a case statement in the ENGLISH_CALC function to handle different operations.",
            "timeout": 0,
            "showstderr": true
          },
          {
            "name": "Check if ENGLISH_CALC handles invalid operations",
            "file": "verify5-3.sh",
            "hint": "Make sure your ENGLISH_CALC function includes error handling for invalid operations.",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": [
          "shell/func_def",
          "shell/case",
          "shell/arith_expansion",
          "shell/variables_usage",
          "linux/echo"
        ]
      }
    ],
    "intro": {
      "text": "intro.md",
      "background": "setup.sh"
    },
    "finish": {
      "text": "finish.md"
    },
    "assets": {
      "host01": [
        {
          "file": "",
          "target": "~/project",
          "chmod": "ugo+rwx"
        }
      ]
    }
  },
  "backend": {
    "imageid": "webide-ubuntu:2204"
  },
  "contributors": [],
  "license": {
    "name": "Apache-2.0",
    "url": "https://github.com/ronreiter/interactive-tutorials#Apache-2.0-1-ov-file",
    "repo": "https://github.com/ronreiter/interactive-tutorials"
  },
  "verified": true
}
