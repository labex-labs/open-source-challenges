{
  "type": "lab",
  "title": "Caching Nearest Neighbors",
  "description": "This lab demonstrates how to precompute the k nearest neighbors before using them in KNeighborsClassifier. KNeighborsClassifier can compute the nearest neighbors internally, but precomputing them can have several benefits, such as finer parameter control, caching for multiple use, or custom implementations. Here we use the caching property of pipelines to cache the nearest neighbors graph between multiple fits of KNeighborsClassifier.",
  "difficulty": "Beginner",
  "time": 35,
  "fee_type": "free",
  "details": {
    "steps": [
      {
        "title": "Import Libraries",
        "text": "step1.md",
        "verify": [
          {
            "name": "Test the completion of step 1",
            "file": "verify1.sh",
            "hint": "You need to practice the code in plot-caching-nearest-neighbors.ipynb",
            "timeout": 0,
            "showstderr": false
          }
        ],
        "skills": []
      },
      {
        "title": "Load Data",
        "text": "step2.md",
        "verify": [
          {
            "name": "Test the completion of step 2",
            "file": "verify2.sh",
            "hint": "You need to practice the code in plot-caching-nearest-neighbors.ipynb",
            "timeout": 0,
            "showstderr": false
          }
        ],
        "skills": []
      },
      {
        "title": "Compute Nearest Neighbors Graph",
        "text": "step3.md",
        "verify": [
          {
            "name": "Test the completion of step 3",
            "file": "verify3.sh",
            "hint": "You need to practice the code in plot-caching-nearest-neighbors.ipynb",
            "timeout": 0,
            "showstderr": false
          }
        ],
        "skills": []
      },
      {
        "title": "Define Classifier Model",
        "text": "step4.md",
        "verify": [
          {
            "name": "Test the completion of step 4",
            "file": "verify4.sh",
            "hint": "You need to practice the code in plot-caching-nearest-neighbors.ipynb",
            "timeout": 0,
            "showstderr": false
          }
        ],
        "skills": []
      },
      {
        "title": "Cache Nearest Neighbors Graph",
        "text": "step5.md",
        "verify": [
          {
            "name": "Test the completion of step 5",
            "file": "verify5.sh",
            "hint": "You need to practice the code in plot-caching-nearest-neighbors.ipynb",
            "timeout": 0,
            "showstderr": false
          }
        ],
        "skills": []
      },
      {
        "title": "Tune Hyperparameters",
        "text": "step6.md",
        "verify": [
          {
            "name": "Test the completion of step 6",
            "file": "verify6.sh",
            "hint": "You need to practice the code in plot-caching-nearest-neighbors.ipynb",
            "timeout": 0,
            "showstderr": false
          }
        ],
        "skills": []
      },
      {
        "title": "Visualize Results",
        "text": "step7.md",
        "verify": [
          {
            "name": "Test the completion of step 7",
            "file": "verify7.sh",
            "hint": "You need to practice the code in plot-caching-nearest-neighbors.ipynb",
            "timeout": 0,
            "showstderr": false
          }
        ],
        "skills": []
      }
    ],
    "intro": {
      "text": "intro.md",
      "background": "setup.sh"
    },
    "finish": {
      "text": "finish.md"
    },
    "assets": {
      "host01": [
        {
          "file": "plot-caching-nearest-neighbors.ipynb",
          "target": "/home/labex/project",
          "chmod": "ugo+rwx"
        }
      ]
    }
  },
  "backend": {
    "imageid": "webide-ubuntu:2204"
  },
  "contributors": ["huhuhang"],
  "license": {
    "name": "BSD 3-Clause",
    "url": "https://github.com/scikit-learn/scikit-learn/tree/main/LICENSE",
    "repo": "https://github.com/scikit-learn/scikit-learn"
  }
}
