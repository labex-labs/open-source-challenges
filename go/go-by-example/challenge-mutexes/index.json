{
  "type": "challenge",
  "title": "Concurrent Data Access with Mutexes | Challenge",
  "description": "This challenge aims to demonstrate how to use mutexes to safely access data across multiple goroutines.",
  "meta": {
    "title": "Mastering Mutexes in Golang | Concurrency Management",
    "description": "Learn how to use mutexes to safely access data across multiple goroutines in Golang, ensuring synchronized counter increments.",
    "keywords": "Golang, Mutexes, Concurrency, Synchronization, Counter Increment"
  },
  "difficulty": "Beginner",
  "time": 15,
  "hidden": false,
  "fee_type": "free",
  "show_in_tutorial": false,
  "details": {
    "steps": [
      {
        "title": "Mutexes",
        "text": "step1.md",
        "verify": [
          {
            "name": "Verify Mutex Counter Updates as Expected",
            "file": "verify1-1.sh",
            "hint": "Please make sure you have completed the required actions.",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": ["go/mutexes"],
        "solutions": ["mutexes.go"]
      }
    ],
    "intro": {
      "text": "intro.md",
      "background": "setup.sh"
    },
    "finish": {
      "text": "finish.md"
    },
    "assets": {
      "host01": [
        {
          "file": "mutexes.go",
          "target": "/home/labex/project",
          "chmod": "ugo+rwx"
        }
      ]
    }
  },
  "backend": {
    "imageid": "webide-ubuntu:2204"
  },
  "contributors": ["jiaosenvip"],
  "license": {
    "name": "CC-BY-3.0",
    "url": "http://creativecommons.org/licenses/by/3.0/",
    "repo": "https://github.com/mmcgrana/gobyexample"
  }
}
