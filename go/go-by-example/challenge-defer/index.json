{
  "type": "challenge",
  "title": "Deferred Function Execution Cleanup",
  "description": "In this challenge, you need to use the `defer` statement to ensure that a file is properly created, written to, and closed, even if errors occur during the execution of the functions.",
  "meta": {
    "title": "Defer in Go Programming | File Handling",
    "description": "Learn how to use the 'defer' statement in Go to create, write, and close files efficiently. Discover the importance of proper file management in Go programming.",
    "keywords": "Go Programming, Defer, File Handling, File Creation, File Writing, File Closing"
  },
  "difficulty": "Beginner",
  "time": 15,
  "hidden": false,
  "fee_type": "free",
  "show_in_tutorial": false,
  "details": {
    "steps": [
      {
        "title": "Defer",
        "text": "step1.md",
        "verify": [
          {
            "name": "Verify File Closed After Writing",
            "file": "verify1-1.sh",
            "hint": "Please make sure you have completed the required actions.",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": ["go/defer"],
        "solutions": ["defer.go"]
      }
    ],
    "intro": {
      "text": "intro.md",
      "background": "setup.sh"
    },
    "finish": {
      "text": "finish.md"
    },
    "assets": {
      "host01": [
        {
          "file": "defer.go",
          "target": "/home/labex/project",
          "chmod": "ugo+rwx"
        }
      ]
    }
  },
  "backend": {
    "imageid": "webide-ubuntu:2204"
  },
  "contributors": ["jiaosenvip"],
  "license": {
    "name": "CC-BY-3.0",
    "url": "http://creativecommons.org/licenses/by/3.0/",
    "repo": "https://github.com/mmcgrana/gobyexample"
  }
}
