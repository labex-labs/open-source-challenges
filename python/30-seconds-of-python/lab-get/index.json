{
  "type": "lab",
  "title": "Get Nested Value",
  "description": "In this lab, you will learn how to use Python's dictionaries and lists to access nested values, and implement a function that retrieves the value of a nested key indicated by a given selector list.",
  "meta": {
    "title": "Get Nested Value in Python",
    "description": "Learn how to retrieve the value of a nested key from a dictionary or list in Python using the get() function.",
    "keywords": "dictionaries, lists, python, get function, nested values"
  },
  "difficulty": "Beginner",
  "time": 15,
  "hidden": true,
  "fee_type": "free",
  "show_in_tutorial": true,
  "details": {
    "steps": [
      {
        "title": "Get Nested Value",
        "text": "step1.md",
        "verify": [
          {
            "name": "Verify Python 3 Script Execution in Temporary Directory",
            "file": "verify1.sh",
            "hint": "Please make sure you have completed the required actions.",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": [
          "python/comments",
          "python/dictionaries",
          "python/function_definition",
          "python/importing_modules",
          "python/lists",
          "python/standard_libraries",
          "python/tuples",
          "python/using_packages"
        ]
      }
    ],
    "intro": {
      "text": "intro.md",
      "background": "setup.sh"
    },
    "finish": {
      "text": "finish.md"
    },
    "assets": {
      "host01": [
        {
          "file": "test_get.py",
          "target": "/tmp",
          "chmod": "ugo+rwx"
        },
        {
          "file": "get.py",
          "target": "/home/labex/project",
          "chmod": "ugo+rwx"
        }
      ]
    }
  },
  "backend": {
    "imageid": "webide-ubuntu:2204"
  },
  "contributors": ["huduo0812", "jiaosenvip"],
  "license": {
    "name": "CC-BY-4.0",
    "url": "https://github.com/30-seconds/30-seconds-of-python/blob/master/LICENSE",
    "repo": "https://github.com/30-seconds/30-seconds-of-python"
  }
}
