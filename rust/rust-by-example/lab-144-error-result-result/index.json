{
  "type": "lab",
  "title": "Exploring Rust's Result Type",
  "description": "In this lab, we will explore the Result type in Rust, which provides a way to handle potential errors instead of possible absence of a value like the Option type. The Result type can have two outcomes - Ok(T) for a successful result with element T, and Err(E) for an error with element E. We will see how to use Result in code examples and how it can be used as the return type of the main function to handle errors and provide a more specific error message.",
  "meta": {
    "title": "Exploring Rust's Result Type",
    "description": "Learn how to handle potential errors using Rust's Result type, including examples and best practices.",
    "keywords": "rust playground, error handling, rust tutor, result type, rust online compiler, rust commands, tutorial, rust practice, rust online playground, rust online"
  },
  "difficulty": "Beginner",
  "time": 5,
  "hidden": false,
  "fee_type": "free",
  "show_in_tutorial": true,
  "details": {
    "steps": [
      {
        "title": "Result",
        "text": "step1.md",
        "verify": [
          {
            "name": "This step has no verification at the moment",
            "file": "verify1.sh",
            "hint": "This step has no verification at the moment",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": [
          "rust/error_propagation",
          "rust/expressions_statements",
          "rust/function_syntax",
          "rust/integer_types",
          "rust/lifetime_specifiers",
          "rust/string_type",
          "rust/variable_declarations"
        ]
      }
    ],
    "intro": {
      "text": "intro.md",
      "background": "setup.sh"
    },
    "finish": {
      "text": "finish.md"
    },
    "assets": {
      "host01": [
        {
          "file": "",
          "target": "/home/labex/project",
          "chmod": "ugo+rwx"
        }
      ]
    }
  },
  "backend": {
    "imageid": "webide-ubuntu:2204"
  },
  "contributors": [],
  "license": {
    "name": "MIT",
    "url": "https://github.com/rust-lang/rust-by-example/blob/master/LICENSE-MIT",
    "repo": "https://github.com/rust-lang/rust-by-example"
  }
}
