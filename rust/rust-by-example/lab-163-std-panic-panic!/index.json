{
  "type": "lab",
  "title": "Rust Panic Handling and Memory Safety",
  "description": "In this lab, we learn about the panic! macro in Rust, which can be used to generate a panic and start unwinding its stack, causing the program to report the panic message and exit. The runtime takes care of freeing all the resources owned by the thread by calling the destructor of its objects. We also look at an example of using the panic! macro to handle division by zero and verify that it doesn't result in memory leaks using Valgrind.",
  "meta": {
    "title": "Rust Programming | Panic Handling and Memory Safety",
    "description": "Learn about the Rust programming language's `panic!` macro, which can be used to generate a panic and start unwinding the stack, ensuring memory safety.",
    "keywords": "Rust, programming, panic, memory safety, error handling"
  },
  "difficulty": "Beginner",
  "time": 5,
  "hidden": false,
  "fee_type": "free",
  "show_in_tutorial": true,
  "details": {
    "steps": [
      {
        "title": "panic!",
        "text": "step1.md",
        "verify": [
          {
            "name": "This step has no verification at the moment",
            "file": "verify1.sh",
            "hint": "This step has no verification at the moment",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": [
          "rust/expressions_statements",
          "rust/function_syntax",
          "rust/integer_types",
          "rust/lifetime_specifiers",
          "rust/method_syntax",
          "rust/operator_overloading",
          "rust/panic_usage",
          "rust/string_type",
          "rust/variable_declarations"
        ]
      }
    ],
    "intro": {
      "text": "intro.md",
      "background": "setup.sh"
    },
    "finish": {
      "text": "finish.md"
    },
    "assets": {
      "host01": [
        {
          "file": "",
          "target": "/home/labex/project",
          "chmod": "ugo+rwx"
        }
      ]
    }
  },
  "backend": {
    "imageid": "webide-ubuntu:2204"
  },
  "contributors": [],
  "license": {
    "name": "MIT",
    "url": "https://github.com/rust-lang/rust-by-example/blob/master/LICENSE-MIT",
    "repo": "https://github.com/rust-lang/rust-by-example"
  }
}
