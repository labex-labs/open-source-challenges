{
  "type": "lab",
  "title": "Variadic Interfaces in Rust Programming",
  "description": "In this lab, we explore variadic interfaces, which are interfaces that can take an arbitrary number of arguments. As an example, we modify the calculate! macro from the previous section to be variadic, allowing it to evaluate multiple expressions at once.",
  "meta": {
    "title": "Rust Programming | Variadic Interfaces | Macro Expansion",
    "description": "Explore variadic interfaces in Rust, a powerful programming concept that allows functions to accept an arbitrary number of arguments. Learn how to extend the 'calculate!' macro to be variadic.",
    "keywords": "Rust, Programming, Variadic Interfaces, Macros, Macro Expansion"
  },
  "difficulty": "Beginner",
  "time": 5,
  "hidden": false,
  "fee_type": "free",
  "show_in_tutorial": true,
  "details": {
    "steps": [
      {
        "title": "Variadic Interfaces",
        "text": "step1.md",
        "verify": [
          {
            "name": "This step has no verification at the moment",
            "file": "verify1.sh",
            "hint": "This step has no verification at the moment",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": [
          "rust/expressions_statements",
          "rust/function_syntax",
          "rust/variable_declarations"
        ]
      }
    ],
    "intro": {
      "text": "intro.md",
      "background": "setup.sh"
    },
    "finish": {
      "text": "finish.md"
    }
  },
  "backend": {
    "imageid": "webide-ubuntu:2204"
  },
  "contributors": [],
  "license": {
    "name": "MIT",
    "url": "https://github.com/rust-lang/rust-by-example/blob/master/LICENSE-MIT",
    "repo": "https://github.com/rust-lang/rust-by-example"
  }
}
