{
  "type": "lab",
  "title": "Defining an Error Type",
  "description": "In this lab, we are looking at how to define a custom error type in Rust and the key characteristics that make a good error type, such as representing different errors with the same type, providing clear error messages, easy comparison with other types, and the ability to hold information about the error.",
  "difficulty": "Beginner",
  "time": 5,
  "hidden": false,
  "fee_type": "free",
  "details": {
    "steps": [
      {
        "title": "Defining an error type",
        "text": "step1.md",
        "verify": [
          {
            "name": "Test the completion of step 1",
            "file": "verify1.sh",
            "hint": "Please follow the instructions to complete the steps.",
            "timeout": 0,
            "showstderr": false
          }
        ],
        "skills": [
          "rust/any",
          "rust/use",
          "rust/fn",
          "rust/write",
          "rust/for",
          "rust/let",
          "rust/match",
          "rust/result",
          "rust/string",
          "rust/error",
          "rust/type"
        ]
      }
    ],
    "intro": {
      "text": "intro.md",
      "background": "setup.sh"
    },
    "finish": {
      "text": "finish.md"
    },
    "assets": {
      "host01": [
        {
          "file": "",
          "target": "/home/labex/project",
          "chmod": "ugo+rwx"
        }
      ]
    }
  },
  "backend": {
    "imageid": "webide-ubuntu:2204"
  },
  "license": {
    "name": "MIT",
    "url": "https://github.com/rust-lang/rust-by-example/blob/master/LICENSE-MIT",
    "repo": "https://github.com/rust-lang/rust-by-example"
  }
}
